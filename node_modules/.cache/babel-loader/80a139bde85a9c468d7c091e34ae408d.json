{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar index = require('./index-of');\n/**\n * Whitespace regexp.\n */\n\n\nvar re = /\\s+/;\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function (el) {\n  return new ClassList(el);\n};\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n\n  this.el = el;\n  this.list = el.classList;\n}\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\n\nClassList.prototype.add = function (name) {\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  } // fallback\n\n\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\n\nClassList.prototype.remove = function (name) {\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  } // fallback\n\n\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\n\nClassList.prototype.toggle = function (name, force) {\n  // classList\n  if (this.list) {\n    if ('undefined' !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n\n    return this;\n  } // fallback\n\n\n  if ('undefined' !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\n\nClassList.prototype.array = function () {\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list ? this.list.contains(name) : !!~index(this.array(), name);\n};","map":{"version":3,"names":["index","require","re","toString","Object","prototype","module","exports","el","ClassList","nodeType","Error","list","classList","add","name","arr","array","i","push","className","join","remove","splice","toggle","force","has","getAttribute","str","replace","split","shift","contains"],"sources":["C:/Users/LÃ­lia/Documents/Cloud AWS/0_Projecto/etc-academy-frontend/node_modules/list.js/src/utils/classes.js"],"sourcesContent":["/**\n * Module dependencies.\n */\n\nvar index = require('./index-of')\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function (el) {\n  return new ClassList(el)\n}\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required')\n  }\n  this.el = el\n  this.list = el.classList\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function (name) {\n  // classList\n  if (this.list) {\n    this.list.add(name)\n    return this\n  }\n\n  // fallback\n  var arr = this.array()\n  var i = index(arr, name)\n  if (!~i) arr.push(name)\n  this.el.className = arr.join(' ')\n  return this\n}\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function (name) {\n  // classList\n  if (this.list) {\n    this.list.remove(name)\n    return this\n  }\n\n  // fallback\n  var arr = this.array()\n  var i = index(arr, name)\n  if (~i) arr.splice(i, 1)\n  this.el.className = arr.join(' ')\n  return this\n}\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function (name, force) {\n  // classList\n  if (this.list) {\n    if ('undefined' !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name) // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name)\n    }\n    return this\n  }\n\n  // fallback\n  if ('undefined' !== typeof force) {\n    if (!force) {\n      this.remove(name)\n    } else {\n      this.add(name)\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name)\n    } else {\n      this.add(name)\n    }\n  }\n\n  return this\n}\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function () {\n  var className = this.el.getAttribute('class') || ''\n  var str = className.replace(/^\\s+|\\s+$/g, '')\n  var arr = str.split(re)\n  if ('' === arr[0]) arr.shift()\n  return arr\n}\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list ? this.list.contains(name) : !!~index(this.array(), name)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}