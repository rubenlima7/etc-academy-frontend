{"ast":null,"code":"/**\n * A cross-browser implementation of getElementsByClass.\n * Heavily based on Dustin Diaz's function: http://dustindiaz.com/getelementsbyclass.\n *\n * Find all elements with class `className` inside `container`.\n * Use `single = true` to increase performance in older browsers\n * when only one element is needed.\n *\n * @param {String} className\n * @param {Element} container\n * @param {Boolean} single\n * @api public\n */\nvar getElementsByClassName = function getElementsByClassName(container, className, single) {\n  if (single) {\n    return container.getElementsByClassName(className)[0];\n  } else {\n    return container.getElementsByClassName(className);\n  }\n};\n\nvar querySelector = function querySelector(container, className, single) {\n  className = '.' + className;\n\n  if (single) {\n    return container.querySelector(className);\n  } else {\n    return container.querySelectorAll(className);\n  }\n};\n\nvar polyfill = function polyfill(container, className, single) {\n  var classElements = [],\n      tag = '*';\n  var els = container.getElementsByTagName(tag);\n  var elsLen = els.length;\n  var pattern = new RegExp('(^|\\\\s)' + className + '(\\\\s|$)');\n\n  for (var i = 0, j = 0; i < elsLen; i++) {\n    if (pattern.test(els[i].className)) {\n      if (single) {\n        return els[i];\n      } else {\n        classElements[j] = els[i];\n        j++;\n      }\n    }\n  }\n\n  return classElements;\n};\n\nmodule.exports = function () {\n  return function (container, className, single, options) {\n    options = options || {};\n\n    if (options.test && options.getElementsByClassName || !options.test && document.getElementsByClassName) {\n      return getElementsByClassName(container, className, single);\n    } else if (options.test && options.querySelector || !options.test && document.querySelector) {\n      return querySelector(container, className, single);\n    } else {\n      return polyfill(container, className, single);\n    }\n  };\n}();","map":{"version":3,"names":["getElementsByClassName","container","className","single","querySelector","querySelectorAll","polyfill","classElements","tag","els","getElementsByTagName","elsLen","length","pattern","RegExp","i","j","test","module","exports","options","document"],"sources":["C:/Users/LÃ­lia/Documents/Cloud AWS/0_Projecto/etc-academy-frontend/node_modules/list.js/src/utils/get-by-class.js"],"sourcesContent":["/**\n * A cross-browser implementation of getElementsByClass.\n * Heavily based on Dustin Diaz's function: http://dustindiaz.com/getelementsbyclass.\n *\n * Find all elements with class `className` inside `container`.\n * Use `single = true` to increase performance in older browsers\n * when only one element is needed.\n *\n * @param {String} className\n * @param {Element} container\n * @param {Boolean} single\n * @api public\n */\n\nvar getElementsByClassName = function (container, className, single) {\n  if (single) {\n    return container.getElementsByClassName(className)[0]\n  } else {\n    return container.getElementsByClassName(className)\n  }\n}\n\nvar querySelector = function (container, className, single) {\n  className = '.' + className\n  if (single) {\n    return container.querySelector(className)\n  } else {\n    return container.querySelectorAll(className)\n  }\n}\n\nvar polyfill = function (container, className, single) {\n  var classElements = [],\n    tag = '*'\n\n  var els = container.getElementsByTagName(tag)\n  var elsLen = els.length\n  var pattern = new RegExp('(^|\\\\s)' + className + '(\\\\s|$)')\n  for (var i = 0, j = 0; i < elsLen; i++) {\n    if (pattern.test(els[i].className)) {\n      if (single) {\n        return els[i]\n      } else {\n        classElements[j] = els[i]\n        j++\n      }\n    }\n  }\n  return classElements\n}\n\nmodule.exports = (function () {\n  return function (container, className, single, options) {\n    options = options || {}\n    if ((options.test && options.getElementsByClassName) || (!options.test && document.getElementsByClassName)) {\n      return getElementsByClassName(container, className, single)\n    } else if ((options.test && options.querySelector) || (!options.test && document.querySelector)) {\n      return querySelector(container, className, single)\n    } else {\n      return polyfill(container, className, single)\n    }\n  }\n})()\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAUC,SAAV,EAAqBC,SAArB,EAAgCC,MAAhC,EAAwC;EACnE,IAAIA,MAAJ,EAAY;IACV,OAAOF,SAAS,CAACD,sBAAV,CAAiCE,SAAjC,EAA4C,CAA5C,CAAP;EACD,CAFD,MAEO;IACL,OAAOD,SAAS,CAACD,sBAAV,CAAiCE,SAAjC,CAAP;EACD;AACF,CAND;;AAQA,IAAIE,aAAa,GAAG,SAAhBA,aAAgB,CAAUH,SAAV,EAAqBC,SAArB,EAAgCC,MAAhC,EAAwC;EAC1DD,SAAS,GAAG,MAAMA,SAAlB;;EACA,IAAIC,MAAJ,EAAY;IACV,OAAOF,SAAS,CAACG,aAAV,CAAwBF,SAAxB,CAAP;EACD,CAFD,MAEO;IACL,OAAOD,SAAS,CAACI,gBAAV,CAA2BH,SAA3B,CAAP;EACD;AACF,CAPD;;AASA,IAAII,QAAQ,GAAG,SAAXA,QAAW,CAAUL,SAAV,EAAqBC,SAArB,EAAgCC,MAAhC,EAAwC;EACrD,IAAII,aAAa,GAAG,EAApB;EAAA,IACEC,GAAG,GAAG,GADR;EAGA,IAAIC,GAAG,GAAGR,SAAS,CAACS,oBAAV,CAA+BF,GAA/B,CAAV;EACA,IAAIG,MAAM,GAAGF,GAAG,CAACG,MAAjB;EACA,IAAIC,OAAO,GAAG,IAAIC,MAAJ,CAAW,YAAYZ,SAAZ,GAAwB,SAAnC,CAAd;;EACA,KAAK,IAAIa,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAApB,EAAuBD,CAAC,GAAGJ,MAA3B,EAAmCI,CAAC,EAApC,EAAwC;IACtC,IAAIF,OAAO,CAACI,IAAR,CAAaR,GAAG,CAACM,CAAD,CAAH,CAAOb,SAApB,CAAJ,EAAoC;MAClC,IAAIC,MAAJ,EAAY;QACV,OAAOM,GAAG,CAACM,CAAD,CAAV;MACD,CAFD,MAEO;QACLR,aAAa,CAACS,CAAD,CAAb,GAAmBP,GAAG,CAACM,CAAD,CAAtB;QACAC,CAAC;MACF;IACF;EACF;;EACD,OAAOT,aAAP;AACD,CAlBD;;AAoBAW,MAAM,CAACC,OAAP,GAAkB,YAAY;EAC5B,OAAO,UAAUlB,SAAV,EAAqBC,SAArB,EAAgCC,MAAhC,EAAwCiB,OAAxC,EAAiD;IACtDA,OAAO,GAAGA,OAAO,IAAI,EAArB;;IACA,IAAKA,OAAO,CAACH,IAAR,IAAgBG,OAAO,CAACpB,sBAAzB,IAAqD,CAACoB,OAAO,CAACH,IAAT,IAAiBI,QAAQ,CAACrB,sBAAnF,EAA4G;MAC1G,OAAOA,sBAAsB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,MAAvB,CAA7B;IACD,CAFD,MAEO,IAAKiB,OAAO,CAACH,IAAR,IAAgBG,OAAO,CAAChB,aAAzB,IAA4C,CAACgB,OAAO,CAACH,IAAT,IAAiBI,QAAQ,CAACjB,aAA1E,EAA0F;MAC/F,OAAOA,aAAa,CAACH,SAAD,EAAYC,SAAZ,EAAuBC,MAAvB,CAApB;IACD,CAFM,MAEA;MACL,OAAOG,QAAQ,CAACL,SAAD,EAAYC,SAAZ,EAAuBC,MAAvB,CAAf;IACD;EACF,CATD;AAUD,CAXgB,EAAjB"},"metadata":{},"sourceType":"script"}